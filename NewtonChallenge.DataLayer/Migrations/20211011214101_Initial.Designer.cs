// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace NewtonChallenge.DataLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211011214101_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewtonChallenge.DataAccessObjects.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Action games"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Platform games"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Shooter games"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Fighting games"
                        },
                        new
                        {
                            GenreId = 5,
                            Name = "Stealth game"
                        },
                        new
                        {
                            GenreId = 6,
                            Name = "Survival games"
                        },
                        new
                        {
                            GenreId = 7,
                            Name = "Rhythm games"
                        },
                        new
                        {
                            GenreId = 8,
                            Name = "Battle Royale games"
                        });
                });

            modelBuilder.Entity("NewtonChallenge.DataAccessObjects.Entities.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("RatingId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            Category = "E",
                            Description = "Everyone"
                        },
                        new
                        {
                            RatingId = 2,
                            Category = "E10+",
                            Description = "Everyone 10+"
                        },
                        new
                        {
                            RatingId = 3,
                            Category = "T",
                            Description = "Teen"
                        },
                        new
                        {
                            RatingId = 4,
                            Category = "M",
                            Description = "Mature"
                        },
                        new
                        {
                            RatingId = 5,
                            Category = "A",
                            Description = "Adults"
                        },
                        new
                        {
                            RatingId = 6,
                            Category = "RP",
                            Description = "Rating Pending"
                        });
                });

            modelBuilder.Entity("NewtonChallenge.DataAccessObjects.Entities.VideoGame", b =>
                {
                    b.Property<int>("VideoGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GenreId")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RatingId")
                        .HasDefaultValueSql("((6))");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("VideoGameId");

                    b.HasIndex("GenreId");

                    b.HasIndex("RatingId");

                    b.ToTable("VideoGames");

                    b.HasData(
                        new
                        {
                            VideoGameId = 1,
                            GenreId = 1,
                            Price = 20.00m,
                            RatingId = 1,
                            ReleaseDate = new DateTime(2021, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Video game one"
                        },
                        new
                        {
                            VideoGameId = 2,
                            GenreId = 2,
                            Price = 24.00m,
                            RatingId = 3,
                            ReleaseDate = new DateTime(2021, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Video game two"
                        },
                        new
                        {
                            VideoGameId = 3,
                            GenreId = 3,
                            Price = 27.00m,
                            RatingId = 4,
                            ReleaseDate = new DateTime(2021, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Video game three"
                        },
                        new
                        {
                            VideoGameId = 4,
                            GenreId = 4,
                            Price = 30.00m,
                            RatingId = 5,
                            ReleaseDate = new DateTime(2021, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Video game four"
                        });
                });

            modelBuilder.Entity("NewtonChallenge.DataAccessObjects.Entities.VideoGame", b =>
                {
                    b.HasOne("NewtonChallenge.DataAccessObjects.Entities.Genre", "Genres")
                        .WithMany("VideoGames")
                        .HasForeignKey("GenreId")
                        .IsRequired();

                    b.HasOne("NewtonChallenge.DataAccessObjects.Entities.Rating", "Ratings")
                        .WithMany("VideoGames")
                        .HasForeignKey("RatingId")
                        .IsRequired();

                    b.Navigation("Genres");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("NewtonChallenge.DataAccessObjects.Entities.Genre", b =>
                {
                    b.Navigation("VideoGames");
                });

            modelBuilder.Entity("NewtonChallenge.DataAccessObjects.Entities.Rating", b =>
                {
                    b.Navigation("VideoGames");
                });
#pragma warning restore 612, 618
        }
    }
}
